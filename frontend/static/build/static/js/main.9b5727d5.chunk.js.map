{"version":3,"sources":["components/RegistrationForm/RegistrationForm.js","components/MessageForm/MessageForm.js","components/MessageList/MessageList.js","components/LogOutPage/LogOutPage.js","components/Sidebar/Sidebar.js","components/LoginPage/LoginPage.js","components/Room/Room.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["RegistrationForm","props","useState","username","email","password1","password2","user","setUser","error","setError","handleChange","e","target","name","value","prevState","className","stytle","margin","onSubmit","preventDefault","handleRegistration","htmlFor","type","id","placeholder","required","onChange","MessageForm","names","setName","texts","setText","action","event","submitMessage","rooms","console","log","MessageList","message","messageItems","map","room","body","onClick","deleteMessage","selectedRoom","LogOut","a","fetch","method","headers","JSON","stringify","response","ok","warn","json","Cookies","remove","setSelection","loggingOut","Sidebar","setRoom","roomList","getMessages","addRoom","style","width","LoginPage","password","users","setUsers","handleChange1","Login","PageLoad","App","setMessage","setSelectedRoom","globalUser","setGlobalUser","data","matchedRoom","find","toString","newRoom","get","set","key","text","newMessage","useEffect","getRooms","options","html","selection","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b5727d5.chunk.js","sourcesContent":["import { useState } from 'react';\n\n\nfunction RegistrationForm(props){\n    const [user, setUser] = useState({\n        username: '',\n        email: '',\n        password1: '', \n        password2: '',\n    });\n\n    const [error, setError] = useState(null);\n\n    const handleChange = (e) => {\n        const {name, value} = e.target;  // == name = e.target.value & value = e.target.value\n        setUser(prevState => ({\n            ...prevState,\n            [name]: value,\n        }));\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(user.password1 !== user.password2){\n            setError('Passwords do not match!');\n        }else {\n            props.handleRegistration(user);\n        }\n    }\n\n\n    return(\n        <>\n        <h2 className='Registration-title'>Register</h2>\n       <form stytle={{margin: '0 20px'}} className=\"mt-3\" onSubmit={handleSubmit}>\n           <div className=\"form-group text-left mb-3\">\n                <label htmlFor=\"username\">Username</label>\n                <input type='text' \n                        className=\"form-control\" \n                        id=\"username\" \n                        placeholder=\"enter username\" \n                        required \n                        name=\"username\" \n                        onChange={handleChange}\n                        value={user.username}\n                        />\n           </div>\n           <div className=\"form-group text-left mb-3\">\n                <label htmlFor=\"email\">Email</label>\n                <input type='email' \n                        className=\"form-control\" \n                        id=\"email\" \n                        placeholder=\"enter email\" \n                        required \n                        name=\"email\" \n                        onChange={handleChange}\n                        value={user.email}\n                        />\n           </div>\n           <div className=\"form-group text-left mb-3\">\n                <label htmlFor=\"password1\">Password</label>\n                <input type='password' \n                        className=\"form-control\" \n                        id=\"password1\" \n                        placeholder=\"enter password\" \n                        required \n                        name=\"password1\" \n                        onChange={handleChange}\n                        value={user.password1}\n                        />\n           </div>\n           <div className=\"form-group text-left mb-3\">\n                <label htmlFor=\"password2\">Confirm Password</label>\n                <input type='password' \n                        className=\"form-control\" \n                        id=\"password2\" \n                        placeholder=\"confirm password\" \n                        required \n                        name=\"password2\" \n                        onChange={handleChange}\n                        value={user.password2}\n                        />\n                <span className=\"text-danger\">{error}</span>\n           </div>\n           <button type=\"submit\" className=\"registration-btn mt-3\">Register</button>\n\n\n\n       </form>   \n       </>\n    )\n}\n\nexport default RegistrationForm;","import { useState } from \"react\"\n\nfunction MessageForm(props){\n\nconst [names, setName] = useState('');\nconst [texts, setText] = useState('');\n\n\nfunction handleNameChange(event){\n    setName(event.target.value);\n}\nfunction handleTextChange(event){\n    setText(event.target.value);\n}\nfunction handleSubmit(event){\n    event.preventDefault();\n    props.submitMessage(names, props.rooms?.id, texts);\n    console.log(props)\n    setName('');\n    setText('');\n}\n\n\n    return (\n        <>\n            <form className=\"form input-group mb-3\" action=\"\" onSubmit={handleSubmit}>\n                <input className=\"form-control\" name=\"name\" value={names} aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\" type=\"text\" placeholder=\"name\" onChange={handleNameChange}/>\n                <input name=\"text\" value={texts} type=\"text\" placeholder=\"text\"onChange={handleTextChange}/>\n                <button type=\"submit\" className=\"btn-submit\" >Subtmit</button>\n            </form>\n        </>\n    )}\n\nexport default MessageForm;","import { useState } from 'react' \n\nfunction MessageList(props) {\n\nconsole.log('props', props.message)\n\n// const [names, setName] = useState('');\nconst [texts, setText] = useState('');\n\nfunction handleTextChange(event){\n    setText(event.target.value);\n}\nfunction handleSubmit(event){\n    event.preventDefault();\n    props.submitMessage(texts, props.rooms);\n    console.log(props)\n    setText('');\n}\nconsole.log(props.rooms)\n\nconst messageItems = props.message?.map(message => <div className=\"message-list\" key={message.id} value={message.room}><div className=\"message-list-content\"><h4>{message.user}</h4><p>{message.body}</p><button className=\"btn delete-btn\" value={message.id} onClick={() => props.deleteMessage(message)}>Delete</button></div></div>);\n    return(\n        <>\n        <div className='messages'>\n        <h2>{props.selectedRoom?.name}</h2>\n        <div className=\"message-user\" >\n        {messageItems}\n        <form className=\"Message-form\"  onSubmit={handleSubmit}>\n              \n                <input name=\"text\" value={texts} type=\"text\" placeholder={`Message  #${props.selectedRoom?.name}`} onChange={handleTextChange}/>\n                <button type=\"submit\" className=\"submit_btn\">Subtmit</button>\n        </form>\n        </div>\n        </div> \n        </>\n    )\n    }\n\nexport default MessageList;","import Cookies from 'js-cookie';\nfunction LogOut(props){\n\n    async function loggingOut(){\n        const response = await fetch('/rest-auth/logout/',{\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json',\n                // 'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(),\n            })\n            if (!response.ok){\n            console.warn(response);\n            } else {\n                const data = await response.json();\n                Cookies.remove('Authorization');\n                props.setSelection('Login')\n            }\n            }\n            \n\n\n    return(\n        <>\n        \n\n        <button className=\"logout-btn\"  onClick={() => loggingOut()}>Log Out</button>\n        \n        </>\n    )\n}\n\nexport default LogOut;","import { useState } from 'react'\nfunction Sidebar(props){\n    const [room, setRoom] = useState({\n        name: '',\n    })\n\n    const roomList = props.rooms.map(room => <div><button className=\"side-dar-btn\" key={room.name} onClick={props.getMessages} type=\"button\" value={room.id}>{room.name}</button></div>  );\n\n    function handleChange(event) {\n        setRoom(event.target.value);\n    }\n    function handleSubmit(event){\n        event.preventDefault();\n        props.addRoom(room);\n        // setRoom('');\n    }\n\n    return(\n        <>\n        <div className='side-bar-nav'>\n        <h3>Rooms</h3>\n        <nav className='nav-bar'>{roomList}</nav>\n        <form onSubmit={props.addRoom} className=\"room-form\" onSubmit={handleSubmit} >\n        <input type='text' placeholder=\"Add Room\" name=\"new-room\" onChange={handleChange} style={{width: '50%'}} />\n        <button type='submit' className=\"addRoom-btn\">Add Room</button>\n        </form>\n        </div>\n        </>\n    )\n}\n\nexport default Sidebar;","import { useState } from 'react';\nfunction LoginPage(props){\n\nconst [users, setUsers] = useState({\n    username: '',\n    password: '',\n});\n\n\n\n    \nconst handleChange1 = (e) => {\n    const {name, value} = e.target;  // == name = e.target.value & value = e.target.value\n    setUsers(prevState => ({\n        ...prevState,\n        [name]: value,\n    }));\n}\n\n    function handleLoginSubmit(event){\n       \n        event.preventDefault();\n        props.Login(users);\n        props.setSelection('MessageList');\n        console.log(users)\n\n    }\n    \n\n    return (\n        <>\n        <h2 className=\"login-h2\">Log In</h2>\n         <form className=\"form\" action=\"\" onSubmit={handleLoginSubmit}>\n         <input type='text' \n                        className=\"\" \n                        id=\"username\" \n                        placeholder=\"enter username\" \n                        required \n                        name=\"username\" \n                        onChange={handleChange1}\n                        value={users.username}\n                        />\n                <input name='password' value={users.password} type='password' placeholder='password' onChange={handleChange1} />\n                <button type=\"submit\" className=\"submit_btn\">Login</button>\n            </form>\n        </>\n    )\n}\n\nexport default LoginPage;","import { useState } from 'react'\n\nfunction PageLoad(props){\n\n\n    return(\n        <>\n        <div className=\"loginPage\">\n        <h4>Are You New Here?</h4>\n        <p>set up a free account here</p>\n        <button type=\"submit\" className=\"registration-btn registration-btn-load\" onClick={() => props.setSelection('RegistrationForm')}>Register</button>\n        <h4>Been Here?</h4>\n        <button type=\"submit\" className=\"login-btn-2 login_btn-load\" onClick={() => props.setSelection('Login')}>Login</button>\n        </div>\n\n        \n        </>\n    )\n}\n\nexport default PageLoad;\n\n","import './App.css';\nimport { useState, useEffect } from 'react';\nimport RegistrationForm from './../RegistrationForm/RegistrationForm';\nimport Cookies from 'js-cookie';\nimport MessageForm from './../MessageForm/MessageForm';\nimport MessageList from './../MessageList/MessageList';\nimport LogOut from './../LogOutPage/LogOutPage';\nimport Sidebar from './../Sidebar/Sidebar'\nimport LoginPage from './../LoginPage/LoginPage';\nimport PageLoad from './../Room/Room';\n\nfunction App() {\n  const [message, setMessage] = useState([]);\n  const [disable, setDisable] = useState(false);\n  const [rooms, setRoom] = useState([]);\n  const [selectedRoom, setSelectedRoom] = useState({id: 0, name: ''});\n  const [loggeedIn, setLoggedIn] = useState(false);\n  const [show, setShow] = useState(true)\n  const [globalUser, setGlobalUser] = useState('');\n\n\nasync function getMessages(event){\n  const response = await fetch(`/api_v1/chats/${event.target.value}/messages/`);\n  const data = await response.json();\n  const matchedRoom = rooms.find(room => {\n  const roomIdString = room.id.toString()\n  return roomIdString===event.target.value\n  })\n  setSelectedRoom(matchedRoom)\n  setMessage(data);\n}\n\n\n\nuseEffect(() => {\n    \n  // GET request using fetch with async/await\n  async function getRooms(){\n  const response = await fetch('/api_v1/chats/');\n  const data = await response.json();\n  console.log(data);\n  await setRoom(data);\n  console.log('rooms', rooms);\n  }// return menuItemsAPI\n  getRooms();\n},[])\n\n/// ADD ROOM\n  async function addRoom(name){\n    const newRoom = {\n      name: name, \n\n    };\n    console.log(name);\n    const response = await fetch('/api_v1/chats/', {\n      method: 'POST',\n      headers: {\n        'Content-Type' : 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(newRoom),\n    });\n    if(response.ok){\n      console.log(response)\n      setRoom([...rooms, newRoom]);\n      console.log({rooms})\n      return response.json(); \n}  \n  }\n\n  async function Login(user){\n    const response = await fetch('/rest-auth/login/',{\n      method: 'POST',\n      headers:{\n        'Content-Type': 'application/json',\n        // 'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(user),\n    })\n    if (!response.ok){\n      console.warn(response);\n      \n    } else{\n      setGlobalUser(user.username);\n      const data = await response.json();\n      console.log(data)\n      Cookies.set('Authorization', `Token ${data.key}`);\n      if (data.key){\n\n      } else {\n        Cookies.remove('Authorization');\n      }\n    }\n    \n  }\n\n  async function submitMessage(text){\n    const newMessage = {\n      user: globalUser,\n      room: selectedRoom.id,\n      body: text, \n    };\n    console.log({newMessage});\n\n    const response = await fetch(`/api_v1/chats/${selectedRoom.id}/messages/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type' : 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(newMessage),\n\n    });\n    console.log(response)\n    setMessage([...message, newMessage])\n\n    if(response.ok){\n      return response.json(); \n\n}  \n  }\n  const handleRegistration = async (user) => {\n  \n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(user),\n    }\n    const response = await fetch('/rest-auth/registration/', options)\n    if(!response){\n      console.warn(response);\n    }else {\n      const data = await response.json();\n      Cookies.set('Authorization', `Token ${data.key}`);\n    }\n    setSelection('Sidebar');\n  }\n\n async function deleteMessage(event){\n    console.log(event.room);\n    console.log('delete function');\n   const response = await fetch(`/api_v1/chats/${event.room}/messages/${event.id}/`, {\n        method: 'DELETE',\n        headers: {\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n    });\n  }\n\n\n\n\n  const [selection, setSelection] = useState('Room')\n  let html;\n\n\n  if(selection === 'MessageForm') {\n    html = <MessageForm />\n  } else if(selection === 'Room'){\n    html = <PageLoad setSelection={setSelection} selection={selection} />\n  } else if (selection === 'MessageList'){\n    html=   (<div><LogOut setSelection={setSelection} setGlobalUser={setGlobalUser} selection={selection} /> <MessageList message={message} submitMessage={submitMessage} rooms={rooms} deleteMessage={deleteMessage} selectedRoom={selectedRoom}  globalUser={globalUser} />\n          <Sidebar rooms={rooms} getMessages={getMessages} addRoom={addRoom}/>\n    </div>)\n  }else if(selection === 'RegistrationForm'){\n    html = <RegistrationForm handleRegistration= {handleRegistration} />\n  } else if (selection === 'Login'){\n      html = <LoginPage  Login={Login} setSelection={setSelection} />\n  } else if (selection ==='Sidebar'){\n    html = <Sidebar rooms={rooms} getMessages={getMessages} addRoom={addRoom}/>\n  }\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">Slack 2.0\n     \n      </header>\n      {html}\n      {console.log(message)}\n       {/* <MessageList style={{display: show ? 'block' : 'none' }} message={message} submitMessage={submitMessage} rooms={rooms} \n       deleteMessage={deleteMessage} selectedRoom={selectedRoom} globalUser={globalUser}/> */}\n    \n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}